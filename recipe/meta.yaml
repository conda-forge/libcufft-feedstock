{% set name = "libcufft" %}
{% set version = "12.0.0.15" %}
{% set cuda_version = "13.0" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: adf4a9c89f32a149b76d3db77589d89f75f9b009840b8b5d5c4baa20d71c6798  # [linux64]
  sha256: 0405aad71ec14eaa42b7b270ef7f020d83b79959670f515b70e600df9ddd7c8f  # [aarch64]
  sha256: 4f0e0c019e1b53166bdeaf52c91c333450ae9dd05fbadc77cffb70a702501b67  # [win]

build:
  number: 1
  binary_relocation: false
  skip: true  # [osx or ppc64le]

requirements:
  build:
    - cf-nvidia-tools 1.*  # [linux]
    - patchelf <0.18.0                      # [linux]

outputs:
  - name: libcufft
    files:
      - lib/libcufft*.so.*                            # [linux]
      - targets/{{ target_name }}/lib/libcufft*.so.*  # [linux]
      - Library\bin\cufft*64_*.dll                    # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      requires:
        - patchelf  # [linux]
      files:
        - test-rpath.sh
      commands:
        - test -L $PREFIX/lib/libcufft.so.{{ version.split(".")[0] }}                             # [linux]
        - test -L $PREFIX/lib/libcufftw.so.{{ version.split(".")[0] }}                            # [linux]
        - test -L $PREFIX/lib/libcufft.so.{{ version }}                                           # [linux]
        - test -L $PREFIX/lib/libcufftw.so.{{ version }}                                          # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcufft.so.{{ version.split(".")[0] }}   # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcufftw.so.{{ version.split(".")[0] }}  # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcufft.so.{{ version }}                 # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcufftw.so.{{ version }}                # [linux]
        - bash test-rpath.sh                                                                      # [linux]
        - if not exist %LIBRARY_BIN%\cufft64_{{ version.split(".")[0] }}.dll exit 1               # [win]
        - if not exist %LIBRARY_BIN%\cufftw64_{{ version.split(".")[0] }}.dll exit 1              # [win]
    about:
      home: https://developer.nvidia.com/cufft
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: cuFFT native runtime libraries
      description: |
        The cuFFT library provides GPU-accelerated Fast Fourier Transform (FFT) implementations.
      doc_url: https://docs.nvidia.com/cuda/cufft/

  - name: libcufft-dev
    build:
      run_exports:
        weak:
          - {{ pin_subpackage("libcufft", max_pin="x") }}
    files:
      - lib/libcufft*.so                                  # [linux]
      - lib/pkgconfig                                     # [linux]
      - targets/{{ target_name }}/include                 # [linux]
      - targets/{{ target_name }}/lib/libcufft*.so        # [linux]
      - targets/{{ target_name }}/lib/stubs/libcufft*.so  # [linux]
      - Library\include                                   # [win]
      - Library\lib\{{ target_name }}                     # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_subpackage("libcufft", exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - libcufft-static >={{ version }}  # [linux]
    test:
      commands:
        - test -L $PREFIX/lib/libcufft.so                                   # [linux]
        - test -L $PREFIX/lib/libcufftw.so                                  # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cudalibxt.h     # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cufft.h         # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cufftw.h        # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/cufftXt.h       # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcufft.so         # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libcufftw.so        # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/stubs/libcufft.so   # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/stubs/libcufftw.so  # [linux]
        - if not exist %LIBRARY_INC%\cudalibxt.h exit 1                     # [win]
        - if not exist %LIBRARY_INC%\cufft.h exit 1                         # [win]
        - if not exist %LIBRARY_INC%\cufftw.h exit 1                        # [win]
        - if not exist %LIBRARY_INC%\cufftXt.h exit 1                       # [win]
        - if not exist %LIBRARY_LIB%\{{ target_name }}\cufft.lib exit 1     # [win]
        - if not exist %LIBRARY_LIB%\{{ target_name }}\cufftw.lib exit 1    # [win]
    about:
      home: https://developer.nvidia.com/cufft
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: cuFFT native runtime libraries
      description: |
        The cuFFT library provides GPU-accelerated Fast Fourier Transform (FFT) implementations.
      doc_url: https://docs.nvidia.com/cuda/cufft/

  - name: libcufft-static
    # cuFFT does not ship `*_static.lib` on Windows so only relevant on linux
    build:
      skip: true  # [not linux]
    files:
      - targets/{{ target_name }}/lib/libcufft*_static*.a
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcufft_static.a
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcufftw_static.a
    about:
      home: https://developer.nvidia.com/cufft
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: cuFFT native runtime libraries
      description: |
        The cuFFT library provides GPU-accelerated Fast Fourier Transform (FFT) implementations.
      doc_url: https://docs.nvidia.com/cuda/cufft/


about:
  home: https://developer.nvidia.com/cufft
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_file: LICENSE
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: cuFFT native runtime libraries
  description: |
    The cuFFT library provides GPU-accelerated Fast Fourier Transform (FFT) implementations.
  doc_url: https://docs.nvidia.com/cuda/cufft/

extra:
  recipe-maintainers:
    - conda-forge/cuda
